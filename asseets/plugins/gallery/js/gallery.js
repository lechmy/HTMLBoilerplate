"use strict"; var _createClass = function () { function a(b, c) { for (var f, d = 0; d < c.length; d++)f = c[d], f.enumerable = f.enumerable || !1, f.configurable = !0, "value" in f && (f.writable = !0), Object.defineProperty(b, f.key, f) } return function (b, c, d) { return c && a(b.prototype, c), d && a(b, d), b } }(); function _classCallCheck(a, b) { if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function") } var pluginName = "gallery", defaults = {}, gallery = function () { function a(b, c) { _classCallCheck(this, a), this.element = b, this.$element = $(b), this.settings = $.extend({}, defaults, c), this._defaults = defaults, this._name = pluginName, this.index = 1, this.imgCount = 0, this.init() } return _createClass(a, [{ key: "init", value: function () { this.$element.append("\n            <div class=\"image-zoom-wrapper\">\n              <a class=\"prev gallery-control\" role=\"button\"></a>\n              <a class=\"next gallery-control\" role=\"button\"></a>\n              <a class=\"close-gallery\" role=\"button\">X</a>\n            </div>\n            <img class=\"image-zoom\" src=\"\" alt=\"\" />\n        "), this.$element.on("click", "img[data-index]", $.proxy(this.openGallery, this)), this.$element.on("click", ".gallery-control.prev", $.proxy(this.prevImg, this)), this.$element.on("click", ".gallery-control.next", $.proxy(this.nextImg, this)), this.$element.on("click", ".close-gallery", $.proxy(this.closeGallery, this)), this.$element.on("click", ".image-zoom-wrapper", $.proxy(this.closeGallery, this)) } }, { key: "openGallery", value: function (c) { var d = this, f = $(c.currentTarget) || $(c.currentTarget).find("img"); this.index = f.data("index"), this.imgCount = this.$element.find("img[data-index]").length, this.$element.find(".image-zoom").attr("src", "").css({ top: f.parent().offset().top - window.pageYOffset, left: f.offset().left, "max-width": f.width(), "max-height": f.height() }).attr("src", f.attr("src")).show(), this.$element.find(".image-zoom-wrapper").fadeIn(), this.$element.find(".image-zoom").animate({ top: window.innerHeight / 2 - this.$element.find(".image-zoom").height() / 2, left: window.innerWidth / 2 - this.$element.find(".image-zoom").width() / 2 }, 500, function () { d.$element.find(".image-zoom").addClass("gallery-zoom") }), this.bindKeys() } }, { key: "closeGallery", value: function () { var d = this; $(document).off("keydown"), this.$element.find(".image-zoom-wrapper, .image-zoom").fadeOut(300, function () { d.$element.find(".image-zoom").removeClass("gallery-zoom") }) } }, { key: "nextImg", value: function (c) { c.stopPropagation(), this.index++ , this.index > this.imgCount && (this.index = 1); var d = this.$element.find("[data-index=" + this.index + "]").attr("src"); this.$element.find(".image-zoom").attr("src", d) } }, { key: "prevImg", value: function (c) { c.stopPropagation(), this.index-- , 1 > this.index && (this.index = this.imgCount); var d = this.$element.find("[data-index=" + this.index + "]").attr("src"); this.$element.find(".image-zoom").attr("src", d) } }, { key: "bindKeys", value: function () { var c = this; $(document).on("keydown", function (d) { switch (d.keyCode) { case 27: c.closeGallery(); break; case 37: c.prevImg(d); break; case 39: c.nextImg(d); break; default: } }) } }]), a }(); $.fn[pluginName] = function () { var a = Array.prototype.slice.call(arguments), b = null, c = a.shift(); return c = c || {}, $.isPlainObject(c) || (b = c, c = {}), this.each(function () { var d = $.data(this, "plugin_" + pluginName); d || (d = new gallery(this, c), $.data(this, "plugin_" + pluginName, d)), b && d[b].apply(d, a) }) };
